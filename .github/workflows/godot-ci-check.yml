# MIT License

# Copyright (c) 2018 BARICHELLO

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: 'Godot CI'
on: 
  push:
    branches: 
      - main

# NOTE: If your `project.godot` is at the repository root, set `PROJECT_PATH` below to ".".
permissions:
  contents: write

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: toy-4
  PROJECT_PATH: ./

jobs:
  # export-windows:
  #   name: Windows Export
  #   runs-on: ubuntu-22.04  # Use 22.04 with godot 4
  #   container:
  #     image: barichello/godot-ci:4.3
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         lfs: true
  #     - name: Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/export_templates/
  #         mkdir -v -p ~/.config/
  #         mv /root/.config/godot ~/.config/godot
  #         mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
  #     - name: Windows Build
  #       run: |
  #         mkdir -v -p build/windows
  #         EXPORT_DIR="$(readlink -f build)"
  #         cd $PROJECT_PATH
  #         godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: windows
  #         path: build/windows

  export-linux:
    name: Run NoSpaghetti Checker
    runs-on: ubuntu-22.04  # Use 22.04 with godot 4
    # container:
    #   image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      # - name: Install curl
      #   run: sudo apt-get update && sudo apt-get install -y curl
      - name: Install Godot
        run : |
          export GODOT_PATH="~/Godot_v4.3-stable_linux.x86_64" 
          wget -O godot.zip https://github.com/godotengine/godot-builds/releases/download/4.3-stable/Godot_v4.3-stable_linux.x86_64.zip
          unzip godot.zip
      - name: Reconfigure
        run: |
          cd $PROJECT_PATH
          rm export_presets.cfg
          rm project.godot
          wget -O "project.godot" https://raw.githubusercontent.com/geekazodium/no-spaghetti-plugin/refs/heads/main/project.godot
      - name: Linux Run
        run: |
          cd $PROJECT_PATH
          echo $GODOT_PATH
          eval "{$GODOT_PATH}" --args "--import --headless"
          eval "{$GODOT_PATH}" --args "run --headless --quit"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: results-min.txt
          path: "{$PROJECT_PATH}/warnings_compact.txt"
      - name: 
        run: |
          test -f "{$PROJECT_PATH}/warnings_compact.txt" && echo "rules violation found" >&2

  # export-web:
  #   name: Web Export
  #   runs-on: ubuntu-22.04  # Use 22.04 with godot 4
  #   container:
  #     image: barichello/godot-ci:4.3
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         lfs: true
  #     - name: Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/export_templates/
  #         mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
  #     - name: Web Build
  #       run: |
  #         mkdir -v -p build/web
  #         EXPORT_DIR="$(readlink -f build)"
  #         cd $PROJECT_PATH
  #         godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: web
  #         path: build/web
  #     - name: Install rsync ðŸ“š
  #       run: |
  #         apt-get update && apt-get install -y rsync
  #     - name: Deploy to GitHub Pages ðŸš€
  #       uses: JamesIves/github-pages-deploy-action@releases/v4
  #       with:
  #         branch: gh-pages # The branch the action should deploy to.
  #         folder: build/web # The folder the action should deploy.

  # export-mac:
  #   name: Mac Export
  #   runs-on: ubuntu-22.04  # Use 22.04 with godot 4
  #   container:
  #     image: barichello/godot-ci:4.3
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         lfs: true
  #     - name: Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/export_templates/
  #         mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
  #     - name: Mac Build
  #       run: |
  #         mkdir -v -p build/mac
  #         EXPORT_DIR="$(readlink -f build)"
  #         cd $PROJECT_PATH
  #         godot --headless --verbose --export-release "macOS" "$EXPORT_DIR/mac/$EXPORT_NAME.zip"
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: mac
  #         path: build/mac
